type ViewCategory = 
 record {
   name: text;
   posts: vec Post__1;
 };
type Trie_1 = 
 variant {
   branch: Branch_1;
   "empty";
   leaf: Leaf_1;
 };
type Trie = 
 variant {
   branch: Branch;
   "empty";
   leaf: Leaf;
 };
type Post__1 = 
 record {
   creation_date_of_Post: text;
   creatorsId: principal;
   description: text;
   firstName: text;
   images: vec nat8;
   lastName: text;
 };
type Post = 
 record {
   creation_date_of_Post: text;
   creatorsId: principal;
   description: text;
   firstName: text;
   images: vec nat8;
   lastName: text;
 };
type List_2 = 
 opt record {
       record {
         Key;
         Trie_1;
       };
       List_2;
     };
type List_1 = 
 opt record {
       record {
         Key;
         List;
       };
       List_1;
     };
type List = 
 opt record {
       Post;
       List;
     };
type Leaf_1 = 
 record {
   keyvals: AssocList_1;
   size: nat;
 };
type Leaf = 
 record {
   keyvals: AssocList;
   size: nat;
 };
type Key = 
 record {
   hash: Hash;
   key: CategoryName;
 };
type Hash = nat32;
type CategoryName = text;
type Branch_1 = 
 record {
   left: Trie_1;
   right: Trie_1;
   size: nat;
 };
type Branch = 
 record {
   left: Trie;
   right: Trie;
   size: nat;
 };
type AssocList_1 = 
 opt record {
       record {
         Key;
         List;
       };
       List_1;
     };
type AssocList = 
 opt record {
       record {
         Key;
         Trie_1;
       };
       List_2;
     };
service : {
  get_all_subcategory_to_a_category: (CategoryName) ->
   (vec ViewCategory) query;
  gets: () -> (Trie) query;
}
